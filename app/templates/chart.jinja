{# Implementation of plotly #}

{% set subtitle = subtitle | default('x') %}
{% set body = body | default('') %}
{% set opacity = opacity | default(1) %}

{% if width %}
    {% set width = width | string + 'px' %}
{% else %}
    {% set width = 'auto' %}
{% endif %}

{% if height %}
    {% set height = height | string + 'px' %}
{% else %}
    {% set height = 'auto' %}
{% endif %}




<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<title>Chart</title>
		<script src="https://cdn.plot.ly/plotly-3.1.0.min.js" charset="utf-8"></script>
		<script src="/static/main.js" charset="utf-8"></script>
		<style>
			@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&family=IBM+Plex+Sans:wght@400,600&display=swap');

			body,
			html {
				height: 100%;
			}
			body {
				margin: 60px;
				font-family: 'IBM Plex Sans', sans-serif;
				color: rgba(0,0,0,.7);
				font-size: 16px;
				font-weight: 400;
			}
			#page-content {
				max-width: 900px;
				margin: 0 auto;
			}
			h1, h2, h3, h4 {
				margin: 0;
				margin-bottom: 20px;
				font-weight: 600;
			}
			.btn-wrap {
				display: flex;
				gap: 5px;
			}
			button {
				border: none;
				background: #666;
				color: #fff;
				padding: 5px 10px;
				border-radius: 2px;
				cursor: pointer;
				font-family: 'IBM Plex Sans', sans-serif;
				font-size: 14px;
				font-weight: 600;
			}
			button:hover {
				background: #444;
			}
			#params {
				display: block;
				margin-bottom: 50px;
			}
			pre {
				font-size: 13px;
				white-space: break-spaces;
				line-height: 1.5;
				color: darkblue;
				background: #fafafa;
				padding: 20px;
				border-radius: 2px;
				border: solid 1px rgba(0,0,0,.1);
			}
			details {
				cursor: pointer;
				margin-bottom: 10px;
			}
			details[open] {
				margin-bottom: 30px;
			}
			details summary {
				display: inline-block;
				user-select: none;
			}
			details summary::before {
				 content: '‚á® ';
			}
			details[open] summary::before {
				 content: '‚á© ';
			}
			details summary:hover {
				color: #777;
			}
			#the-chart-wrap {
				width: 100%;
				max-width: 1800px;
				margin-top: 50px;
			}
			#the-chart {
				border: solid 1px rgba(0, 0, 0, 0.1);
				box-shadow: 0 0 100px rgba(0, 0, 0, 0.1);
			}
		</style>
		<script>
			function openImage(format) {
				const url = new URL(window.location.href);
				url.searchParams.set('output', format);
				window.open(url.href);
			}
		</script>
	</head>
	<body>
		<div id="page-content">
			{{ ('<h1>' + title + '</h1>') | safe if title else '' }}
			{{ ('<h2>' + subtitle + '</h2>') | safe if subtitle else '' }}
			{{ ('<p>' + body + '</p>') | safe if body else '' }}

			<div class="btn-wrap">
				<a href="#" onclick="openImage('svg')"><button>SVG</button></a>
				<a href="#" onclick="openImage('png')"><button>PNG</button></a>
			</div>

			{# <small id="params">
				Width: {{ width }}<br />
				Height: {{ height }}<br />
			</small> #}

			<div id="the-chart-wrap" style="width: {{ width }}; height: {{ height }}">
				<div id="the-chart"></div>
			</div>

			<br>
			<br>
			
			<small style="color: #aaa">
				<details>
					<summary>Input data</summary>
					<pre>{{ input_data | tojson(indent=2) }}</pre>
				</details>
				
				<details>
					<summary>Chart data</summary>
					<pre>{{ chart_data | tojson(indent=2) }}</pre>
				</details>
				
				<details>
					<summary>Layout config</summary>
					<pre>{{ layout | tojson(indent=2) }}</pre>
				</details>

				<details>
					<summary>Color palette</summary>
					<div style="display:flex; flex-wrap:wrap; width:407px; gap:1px; margin-bottom:10px; margin: 10px 0">
					{% for color in layout.colorway %}
						<div style="width:50px; height:50px; margin-bottom:0px; background-color:{{ color }}"></div>
					{% endfor %}
					</div>
				</details>
			</small>
		</div>

		<script>
			// Parse data
			const chartData = {{ chart_data | tojson }}
			const inputData = {{ input_data | tojson | default(null) }}
			
			// Console message + data
			// https://www.w3schools.com/charsets/ref_utf_box.asp
			sep = '\u2550'.repeat(38) + '\n'
			console.log(`%c${sep}%c This chart was generated by %cOMGUI%c üò±\n%c${sep}`, 'color: #ccc', 'color: #aaa', 'font-weight: bold; color: #777', 'font-weight: normal', 'color: #ccc')
			console.groupCollapsed('%cüë®‚Äçü¶∞ Input Data', 'color: darkseagreen')
			console.log(inputData)
			console.groupEnd()
			console.groupCollapsed('%cüìà Chart Data', 'color: coral')
			console.log(chartData)
			console.groupEnd()
			console.log('\n\n')
			
			// Options
			const width = "{{ width }}"
			const height = "{{ height }}"
			const title = "{{ title if title is not none else '' }}"
			const subtitle = "{{ subtitle if subtitle is not none else '' }}"
			const body = "{{ body if body is not none else '' }}"
			const xTitle = "{{ x_title if x_title is not none else '' }}"
			const yTitle = "{{ y_title if y_title is not none else '' }}"
			const xPrefix = "{{ x_prefix if x_prefix is not none else '' }}"
			const yPrefix = "{{ y_prefix if y_prefix is not none else '' }}"
			const xSuffix = "{{ x_suffix if x_suffix is not none else '' }}"
			const ySuffix = "{{ y_suffix if y_suffix is not none else '' }}"
			const opacity = {{ opacity }}

			// Boxplot specific options
			const boxmode = "{{ boxmode if boxmode is not none else 'overlay' }}"
			const barmode = "{{ barmode if barmode is not none else 'group' }}" //  stack | group | overlay | relative

			// Style constants
			const colorText = "#777"
			const colorTextDark = "#444"
			const colorLine = "#CCC"
			const family = '"IBM Plex Sans", sans-serif'
			const weight = 400
			const weightBold = 600
			
			// Compile layout dict
			// - - -
			// We remove title and subtitle from the layout
			// because the're already displayed in the HTML,
			// unless the user explicitly requests to include them.
			const layout = {{ layout |  tojson }}
			if (1) {
				delete layout.title
				layout.margin.t = 70
			}

			// Chart configuration
			// https://plotly.com/javascript/configuration-options/
			const config = { responsive: true, displaylogo: false }

			// Render the chart in the div with the id "the-chart"
			Plotly.newPlot("the-chart", chartData, layout, config)
		</script>
	</body>
</html>
